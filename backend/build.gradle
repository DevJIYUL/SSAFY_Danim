plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.danim'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExt
}

repositories {
	mavenCentral()
}
ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// spring test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'junit:junit:4.13.1'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	//      testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	// https://mvnrepository.com/artifact/org.json/json ,카카오 로그인시 jsonobject사용을 위해 추가
	implementation group: 'org.json', name: 'json', version: '20230227'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// aws setting
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named ('test') {
	outputs.dir snippetsDir

}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static")
}
build {
	dependsOn copyDocument
}
bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into "static/docs"
	}
}